<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CUuLWP95StcAAAAASUVORK5CYII=
</value>
  </data>
</root>